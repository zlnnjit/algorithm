# 283. 移动零

## 题目描述

给定一个数组 `nums`，编写一个函数将所有 `0` 移动到数组的末尾，同时保持非零元素的相对顺序。

## 示例

示例 1：



```
输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
```

**说明**:

1. 必须在原数组上操作，不能拷贝额外的数组。
2. 尽量减少操作次数。

# Code

```java
class Solution {
    public void moveZeroes(int[] nums) {
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            if(nums[i] != 0) nums[index++] = nums[i];
        }
        for (int i = index; i < nums.length; i++) {
            nums[i] = 0;
        }
    }
}
```

一次for循环写法

```java
class Solution {
    public void moveZeroes(int[] nums) {
        int index = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != 0) {
                nums[index] = nums[i];
                if (i != index++) nums[i] = 0;
            }
        }
    }
}
```



**复杂度分析**：

- 时间复杂度 O(N)
- 空间复杂度 O(1)

# 题解

https://leetcode-cn.com/problems/move-zeroes/solution/yi-dong-ling-javajian-ji-ti-jie-bao-li-shuang-zhi-/